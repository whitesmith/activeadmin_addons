version: 2.1

env-vars: &env-vars
  RAILS_ENV: test
  NODE_ENV: test
  BUNDLE_PATH: vendor/bundle
  SPROCKETS: false

orbs:
  ruby: circleci/ruby@0.1.2
  browser-tools: circleci/browser-tools@1.1.3

executors:
  main-executor:
    parameters:
      ruby-version:
        description: "Ruby version"
        default: "2.7"
        type: string
    docker:
      - image: circleci/ruby:<<parameters.ruby-version>>-node
        environment: *env-vars

commands:
  setup:
    description: checkout code, restore cache, install dependencies, save cache
    steps:
      - checkout
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - restore_cache:
          keys:
          - bundler-dependencies-{{ checksum "Gemfile.lock" }}
          - bundler-dependencies-
      - run:
          name: Install bundle dependencies
          command: |
            BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")
            gem install bundler:$BUNDLER_VERSION
            bundle _$(echo $BUNDLER_VERSION)_ install
      - save_cache:
          key: bundler-dependencies-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: Setup database
          command: (cd spec/dummy && bundle exec rake db:setup)
      - run:
          name: Prepare Assets
          command: |
            bundle exec rake prepare_assets
            (cd spec/dummy && bundle exec rake webpacker:compile)

jobs:
  lint:
    executor: main-executor
    steps:
      - setup
      - run:
          name: Install reviewdog
          command: |
            curl -sfL https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh | sh -s -- -b ./bin
      - run:
          name: Get files to lint
          command: git diff origin/master --name-only --diff-filter=d > tmp/files_to_lint
      - run:
          name: Run rubocop
          shell: /bin/bash
          command: |
            cat tmp/files_to_lint | grep -E '.+\.(rb)$' | xargs bundle exec rubocop --force-exclusion \
            | ./bin/reviewdog -reporter=github-pr-review -f=rubocop
  test:
    parameters:
      ruby-version:
        description: "Ruby version"
        default: "2.7"
        type: string
    executor:
      name: main-executor
      ruby-version: <<parameters.ruby-version>>
    steps:
      - setup
      - run:
          name: Run Utils Tests
          command: |
            RSPEC_JUNIT_ARGS="-r rspec_junit_formatter -f RspecJunitFormatter -o test_results/utils-rspec.xml"
            RSPEC_FORMAT_ARGS="-f progress --no-color -p 10"
            bundle exec rspec ./spec/lib $RSPEC_FORMAT_ARGS $RSPEC_JUNIT_ARGS
      - run:
          name: Run Webpack Tests
          command: |
            RSPEC_JUNIT_ARGS="-r rspec_junit_formatter -f RspecJunitFormatter -o test_results/webpack-rspec.xml"
            RSPEC_FORMAT_ARGS="-f progress --no-color -p 10"
            export SPROCKETS=false
            bundle exec rspec ./spec/features $RSPEC_FORMAT_ARGS $RSPEC_JUNIT_ARGS
      - run:
          name: Run Sprockets Tests
          command: |
            RSPEC_JUNIT_ARGS="-r rspec_junit_formatter -f RspecJunitFormatter -o test_results/sprockets-rspec.xml"
            RSPEC_FORMAT_ARGS="-f progress --no-color -p 10"
            export SPROCKETS=true
            bundle exec rspec ./spec/features $RSPEC_FORMAT_ARGS $RSPEC_JUNIT_ARGS
      - store_test_results:
          path: test_results

  deploy:
    executor: main-executor
    steps:
      - setup
      - run:
          name: Setup rubygems
          command: bash .circleci/setup-rubygems.sh
      - run:
          name: Publish to rubygems
          command: |
            gem build activeadmin_addons.gemspec
            version_tag=$(git describe --tags)
            gem push activeadmin_addons-${version_tag#v}.gem

workflows:
  version: 2
  test_and_lint:
    jobs:
      - lint:
          context: org-global
      - test:
          matrix:
            parameters:
              ruby-version: ["2.5", "2.6", "2.7"]
      - deploy:
          context: org-global
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
